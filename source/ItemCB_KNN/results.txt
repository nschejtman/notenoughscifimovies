100000 samples, no title or tags, > 2 in CV
(25294, 64045) (64045, 81)
{'a_sh': 500.0, 'k': 500}
Computing similarity matrix
Iteration:  1 / 13
Iteration:  2 / 13
Iteration:  3 / 13
Iteration:  4 / 13
Iteration:  5 / 13
Iteration:  6 / 13
Iteration:  7 / 13
Iteration:  8 / 13
Iteration:  9 / 13
Iteration:  10 / 13
Iteration:  11 / 13
Iteration:  12 / 13
Iteration:  13 / 13
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 0.38%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 0.76%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 1.14%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 1.52%
Result:  result(mean_score=0.00011536830571171073, std_dev=0.00011390608997857589, parameters={'a_sh': 500.0, 'k': 500})
{'a_sh': 500.0, 'k': 200}
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 1.89%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 2.27%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 2.65%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 3.03%
Result:  result(mean_score=0.0, std_dev=0.0, parameters={'a_sh': 500.0, 'k': 200})
{'a_sh': 500.0, 'k': 100}
/usr/local/lib/python2.7/dist-packages/scipy/sparse/compressed.py:730: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive. lil_matrix is more efficient.
  SparseEfficiencyWarning)
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 3.41%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 3.79%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 4.17%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 4.55%
Result:  result(mean_score=8.31946755407654e-06, std_dev=1.4409740495581344e-05, parameters={'a_sh': 500.0, 'k': 100})
{'a_sh': 500.0, 'k': 50}
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 4.92%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 5.30%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 5.68%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 6.06%
Result:  result(mean_score=2.123683316343867e-05, std_dev=3.6783274030939464e-05, parameters={'a_sh': 500.0, 'k': 50})
{'a_sh': 500.0, 'k': 20}
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 6.44%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 6.82%
Started prediction
Iteration:  1 / 3
Iteration:  2 / 3
Iteration:  3 / 3
Progress: 7.20%
